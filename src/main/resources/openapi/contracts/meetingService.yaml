openapi: 3.0.0
info:
  title: Meeting Management API
  description: API for managing meetings and participants
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Local server

tags:
  - name: participant-command-controller
    description: Participant command controller
  - name: participant-query-controller
    description: Participant query controller
  - name: meeting-room-command-controller
    description: Meeting room command controller
  - name: meeting-room-query-controller
    description: Meeting room query controller
  - name: meeting-command-controller
    description: Meeting command controller
  - name: meeting-query-controller
    description: Meeting query controller
paths:
  /participants:
    get:
      tags:
        - participant-query-controller
      summary: Get all participants
      operationId: getParticipants
      responses:
        '200':
          description: List of participants
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
    post:
      tags:
        - participant-command-controller
      summary: Create a new participant
      operationId: saveParticipant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
      responses:
        '201':
          description: Participant created successfully
          content:
            'application/json':
              schema:
                type: object
                $ref: '#/components/schemas/Participant'
        '400':
          description: Invalid input
          content:
            'application/json':
              schema:
                type: object
                $ref: '#/components/schemas/ApiError'
  /participants/{id}:
    delete:
      tags:
        - participant-command-controller
      summary: Delete a participant
      operationId: deleteParticipant
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: long
      responses:
        '204':
          description: Participant deleted successfully

  /meeting-rooms:
    get:
      tags:
        - meeting-room-query-controller
      summary: Get all meeting rooms
      operationId: getMeetingRooms
      responses:
        '200':
          description: List of meeting rooms
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingRoom'
    post:
      tags:
        - meeting-room-command-controller
      summary: Create a new meeting room
      operationId: saveMeetingRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRoom'
      responses:
        '201':
          description: Meeting room created successfully
          content:
            'application/json':
              schema:
                type: object
                $ref: '#/components/schemas/MeetingRoom'
  /meeting-rooms/{id}:
    delete:
      tags:
        - meeting-room-command-controller
      summary: Delete a meeting room
      operationId: deleteMeetingRoom
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: long
      responses:
        '204':
          description: Meeting room deleted successfully

  /meetings:
    get:
      tags:
        - meeting-query-controller
      summary: Get all meetings
      operationId: getMeetings
      responses:
        '200':
          description: List of meetings
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meeting'
    post:
      tags:
        - meeting-command-controller
      summary: Create a new meeting
      operationId: saveMeeting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
      responses:
        '201':
          description: Meeting created successfully
          content:
            'application/json':
              schema:
                type: object
                $ref: '#/components/schemas/Meeting'
        '500':
          description: Meeting could not be created
          content:
            'application/json':
              schema:
                type: object
                $ref: '#/components/schemas/ApiError'
  /meetings/{id}:
    delete:
      tags:
        - meeting-command-controller
      summary: Delete a meeting
      operationId: deleteMeeting
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: long
      responses:
        '204':
          description: Meeting deleted successfully

components:
  schemas:
    Participant:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: long
        name:
          type: string
        email:
          type: string
    MeetingRoom:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: long
        name:
          type: string
    Meeting:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: long
        title:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        meetingRoom:
          $ref: '#/components/schemas/MeetingRoom'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
    ApiError:
      type: object
      required:
        - cause
      properties:
        cause:
          type: string
